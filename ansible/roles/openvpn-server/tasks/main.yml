- name: Update apt packages
  apt:
    upgrade: yes

- name: Install openvpn
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - openvpn
    - easy-rsa

- name: Check if CA dir exists
  stat:
    path: "{{ ansible_env.HOME }}/openvpn-ca"
  register: openvpn_ca_dir

- name: "Create CA dir if not exists"
  command: make-cadir {{ ansible_env.HOME }}/openvpn-ca
  when: not openvpn_ca_dir.stat.exists

- name: Customize CA variable configuration
  lineinfile:
    dest: "{{ ansible_env.HOME }}/openvpn-ca/vars"
    regexp: "^{{ item.property | regex_escape() }}="
    line: "{{ item.property }}={{ item.value }}"
  with_items:
    - { property: "export KEY_NAME", value: '"server"' }
    - { property: "export KEY_COUNTRY", value: '"IT"' }
    - { property: "export KEY_PROVINCE", value: '"LE"' }
    - { property: "export KEY_CITY", value: '"LE"' }
    - { property: "export KEY_ORG", value: '"example"' }
    - { property: "export KEY_EMAIL", value: '"example@example.com"' }
    - { property: "export KEY_OU", value: '"example"' }
    - {
        property: "export KEY_CONFIG",
        value: "{{ ansible_env.HOME }}/openvpn-ca/openssl-1.0.0.cnf",
      }
    - {
        property: "export KEY_DIR",
        value: "{{ ansible_env.HOME }}/openvpn-ca/keys",
      }

- name: "Build the certificate authority"
  shell: >
    source vars;
    ./clean-all;
    yes "" | ./build-ca;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build server certificate"
  shell: >
    source vars;
    ./build-key-server --batch server;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build Diffie-Hellman parameters and key generation"
  shell: >
    source vars;
    yes "" | ./build-dh;
    openvpn --genkey --secret keys/ta.key;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Copy key and certificates to /etc/openvpn"
  copy:
    remote_src: yes
    src: "{{ ansible_env.HOME }}/openvpn-ca/keys/{{ item }}"
    dest: "/etc/openvpn/"
  with_items:
    - "ca.crt"
    - "server.crt"
    - "server.key"
    - "ta.key"
    - "dh2048.pem"

- name: "Generate server.conf from template"
  template:
    src: assets/server.conf.j2
    dest: /etc/openvpn/server.conf

- name: Configuration IP forwarding
  become: true
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present

- name: Add ufw before content
  become: true
  blockinfile:
    path: /etc/ufw/before.rules
    insertbefore: BOF
    content: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s 10.8.0.0/8 -o eth0 -j MASQUERADE
      COMMIT

- name: Customize ufw forwarding policy
  become: true
  lineinfile:
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'
    path: "/etc/default/ufw"
    regexp: '^DEFAULT_FORWARD_POLICY="DROP"'

- name: Open ufw ports for openvpn and ssh
  become: true
  shell: ufw allow openvpn && ufw allow OpenSSH

- name: Enable ufw
  become: true
  shell: ufw --force enable

- name: Start openvpn systemd service
  become: true
  systemd:
    name: openvpn@server
    state: started
    daemon_reload: yes
    enabled: yes
